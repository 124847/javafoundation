package 网络编程;

/*


面向对象思想强调"必须通过对象的形式做事情"

函数式思想则尽量忽略面向对象的复杂语法:强调做什么，而不是以什么形式去做
而Lambda表达式就是函数西乡的体现

lambda的标准格式
lambda表达式的代码分析
(): 里面没有内容，可以看成是方法形式参数为空
->:用箭头指向后面要做的事情
{}: 包含一段代码，我们称为代码块,可以看成是方法中的内容

Lambda表达式的练习
有一个接口
接口中有且仅有一个抽象方法   接口中的静态方法和默认方法不是抽象方法



lambda的省略模式
参数的类型可以省略 括号里必须全部省略或全部不省略
如果参数有且仅有一个,那么小括号可以省略
如果代码块的语句只有一条,可以省略大括号和分号  如果这一条是return句子,当省略大括号和分号时也要省略return

lambda表达式的注意事项
使用lambda必须是接口，具体类和抽象类不可以用，并且接口中有且仅有一个抽象方法
必须有上下文环境  即可以代表实现类对象 根据括号类所需要的实现类自动转换成该类的实现类对象

lambda表达式和匿名内部类的区别
使用范围不同 匿名内部类在任何情况都能使用 重写方法即可   而使用lambda必须是实现接口，而实现具体类和抽象类不可以用，并且接口中有且仅有一个抽象方法
实现原理不同
匿名内部类编译之后会产生一个单独的.class文件即.class字节码文件  可以看见
而lambda 运行时会动态产生一个.class文件但是看不见
 */
//

public class Lambda表达式 {
    public static void main(String[] args) {
        yt(Integer::parseInt);
    }

    static void yt(YU s) {
        int i = s.convert("456");
        System.out.println();
    }
    }

