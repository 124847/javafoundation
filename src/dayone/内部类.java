package dayone;

/*
内部类
内部类：就是在一个类中定义一个类
内部类的特点
内部类可以直接访问外部类的成员，包括私有
外部类要访问内部类的成员，必须要创建对象

成员内部类
按照内部类在类中的定义的位置不同，可以分为一下两种形式
在类的成员位置：成员内部类
在类的局部位置，局部内部类
成员内布列，调用
格式 ： 外部类名.内部类名 对象名 =  new 外部类对象.new 内部类对象

但一般不用这种 因为内部类就是希望不可以被随意调用 所以通常用private修饰内部类
然后利用这个内部类的外部类的方法里创建内部类对象，和调用内部类方法，
然后通过创建外部类对象，调用外部类方法，来调用内部类方法

局部内部类
局部内部类是方法中定义的类，所以外界是无法直接使用，需要在方法内部创建对象并使用
该类可以直接访问外部类的成员，也可以访问方法内部的局部变量

类的内部不能调方法，方法的内部可以调方法


匿名内部类
前提：存在一个类或者接口，这里的类可以是具体类也可以是抽象类
格式：
new 类名或者接口名(){
    重写方法;
};
eg: new Inter(){
    public void show(){
    }

};
本质 是一个继承了该类或者实现了该接口的子类匿名对象
匿名内部类自我理解，它就是一个有实例的继承或者是有实例的实现接口

匿名内部类在开发中的使用
 */


//
public class 内部类 {
}
