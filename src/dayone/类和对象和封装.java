package dayone;

/*
客观存在的事物都可以看作对象  eg：华为mate40
类是对现实生活中一类具有共同属性和行为的事物得到抽象    eg:手机
类的特点：
类是对象的数据类型
类是具有相同属性和行为的一组对象集合   eg：每个手机 第一个手机 第二个手机
属性：对象具有的各种特征，每个对象的每个属性都拥有特定的值 eg: 品牌 华为 iPhone 三星 内存 128g 256g
行为：对象能够执行的操作   eg:打电话 打游戏

类：类是对现实生活中一类具有共同属性和行为的事物的抽象 手机类
对象:是能够看得到摸得着的真实存在的实体 也可以说是个实例 具体到某个手机
类是对象的抽象
对象是类的实体

类的定义
类的重要性：是Java程序的基本组成单位

定义类名
编写类的成员变量
编写类的成员方法

创建对象
类名 对象名 = new 类名(); eg: Phone p = new phone()  new出来的东西有默认值 String 的默认值是 null
使用对象
使用成员变量 对象名.变量名 eg：p.brand
使用成员方法 对象名.方法名() eg: p.call()


成员变量和局部变量
成员变量：类中方法外的变量
局部变量：方法中的变量
区别 类中位置不同 方法形参的变量也是局部变量
    内存中的位置不同 成员变量在堆内存 局部变量在栈内存
    生命周期不同    成员变量随着对象的存在而存在，随着对象的消失而消失  局部变量随着方法的调用而存在，随着方法调用完毕而消失
    初始化值不同    成员变量在堆内存有默认的初始化值   局部变量在栈内存没有默认的初始化值，必须先定义，赋值才能使用

封装
private关键字
是一个权限修饰符
可以修饰成员(成员变量和成员方法)
作用是可以保护成员不被别的类使用,被private修饰的成员只能在本类中才能访问
针对private修饰的成员变量,如果需要被其他类使用，提供相应的操作
提供get变量名() 方法,用于获取成员变量的值,方法用public修饰
提供set变量名(参数) 方法,用于获取成员变量的值,方法用public修饰1
注意private方法可以改变private变量的值 所以只是保护成员不被别的类使用

this关键字的使用
目的为了解决局部参数变量赋值给成员变量时的问题 解决局部变量隐藏成员变量
所以要在成员变量前加this
即方法的形参如果与成员变量同名 不带this修饰的变量指的是形参，而不是成员变量
方法的形参如果与成员变量不同名 不带this修饰的变量指的是成员变量
方法被哪个对象调用，this就代表哪个对象


封装
封装概述
封装是面向对象三大特征之一 (封装，继承，多态)
是面向对象编程语言对客观世界的模拟，客观世界里的成员变量都是隐藏在对象内部的，外界是无法操作的
封装原则
将类的某些信息隐藏在类的内部，不允许外部程序直接访问，而是通过该类提供的方法来实现对隐藏信息的操作和访问成员变量private
提供对应的getXxx()/setXxx()方法
封装好处
通过方法来控制成员变量的操作，提高了代码的安全性
把代码用方法进行封装，提高了代码的复用性


构造方法
构造方法概述
构造方法是一种特殊的方法
作用：创建对象
功能：完成数据的初始化

构造方法的注意事项
当一个类中没有给出构造方法，系统会默认给出一个无参构造方法;
如果自行给出构造方法那么系统将不会默认给出一个无参构造方法；

无论是否使用，都手工书写无参数构造方法比较好


标准类的制作
*/
//
public class 类和对象和封装 {

}
