package dayone;

/*
继承是面向对象三大特征之一,可以使子类具有父类的属性和方法,还可以在子类中重新定义,追加属性和方法
继承格式
格式 public class 子类名 extends 父类名()
eg:public class Zi extends FU()
FU:是父类,也被称为基类,超类
Zi:是子类,也被称为派生类
子类可以有父类的内容
子类还可以有自己特有的内容


继承的好处
提高了代码的复用性(多个类相同的成员可以放到同一个类中)
提高了代码的维护性(有可能如果方法的代码需要修改,修改一处即可)
继承的弊端
继承让类和类之间产生了关系，类的耦合性增强了，当父类发生变化时子类实现也不得不跟着变化，削弱了子类的独立性

什么时候使用继承？
继承体现的关系:is a
eg：苹果和水果  猫和动物


继承中变量的访问特点
子类局部范围找
子类成员范围找
父类成员范围找
如果都没有就报错（不考虑父亲的父亲）

super
super关键字的用法和this关键字的用法相似
this 代表本类对象的引用
super 代表父类存储空间的标识(可以理解为父类对象的引用)
访问成员变量 访问构造方法 访问成员方法


继承中构造方法的访问特点
子类中所有的构造方法默认都会访问父类中的无参构造方法
因为子类会继承父类中的数据,可能还会使用父类的数据。所以，子类初始化之前，一定要先完成对父类数据的初始化
每一个子类构造方法的第一条语句默认都是super()
如果父类中没有无参构造方法,只有带参构造方法
通过使用super关键字去显示的调用父类的带参构造方法
或者在父类中自己提供一个无参构造方法

自己给出无参构造方法更好些

继承中成员方法的访问特点
通过子类对象访问一个方法
子类成员范围找
父类成员范围找
如果找不到就报错（不考虑父亲的父亲）

方法重写
子类中出现了和父类一模一样的方法声明

当子类需要父类的功能,而功能主体子类有自己特有内容时,可以重写父类中的方法,
这样，即沿袭了父类的功能，又定义了子类特有的内容

方法重写的注意事项
私有方法不能被重写(子类是不能继承父类私有成员)
继承子类方法访问权限要大于或等于父类中向下继承的访问权限
访问权限 public > 默认(什么也不写) > private

java中继承的注意事项
java中类只支持单个继承,不支持多个继承(每个类名后的extends后只能跟一个父类)
java中类支持多层继承
子类可以可以继承父类的所有属性和所有方法，只是继承的私有属性和私有方法无法访问。

任何类都默认继承Object类


在继承关系中，子类可以继承父类的public 属性和方法，
可以继承protected属性和方法，如果子类和父类在同一个包中，
则父类默认访问修饰符属性和方法也是可以被子类继承的。父类的构造函数不能继承
 */
//
public class 继承 {
}
